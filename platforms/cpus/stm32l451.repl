cpu: CPU.CortexM @ sysbus
    cpuType: "cortex-m4f"
    nvic: nvic

nvic: IRQControllers.NVIC @ sysbus 0xE000E000
    -> cpu@0

dma1: DMA.STM32DMA @ sysbus 0x40020000
    [0-6] -> nvic@[11-17]

dma2: DMA.STM32DMA @ sysbus 0x40020400
    [0-6] -> nvic@[56-60,68-69]

gpioPortA: GPIOPort.STM32_GPIOPort @ sysbus <0x48000000, +0x400>
    [0-15] -> exti@[0-15]

gpioPortB: GPIOPort.STM32_GPIOPort @ sysbus <0x48000400, +0x400>
    [0-15] -> exti@[0-15]

gpioPortC: GPIOPort.STM32_GPIOPort @ sysbus <0x48000800, +0x400>
    [0-15] -> exti@[0-15]

gpioPortD: GPIOPort.STM32_GPIOPort @ sysbus <0x48000C00, +0x400>
    [0-15] -> exti@[0-15]

gpioPortE: GPIOPort.STM32_GPIOPort @ sysbus <0x48001000, +0x400>
    [0-15] -> exti@[0-15]

gpioPortH: GPIOPort.STM32_GPIOPort @ sysbus <0x48001C00, +0x400>
    [0-15] -> exti@[0-15]

exti: IRQControllers.EXTI @ sysbus 0x40010400
    [0-4] -> nvic@[6-10]

adc: Analog.STM32_ADC @ sysbus 0x50040000
    IRQ -> nvic@18

can1: CAN.STMCAN @ sysbus <0x40006400, +0x400>
    [0-3] -> nvic@[19-22]

i2c1: I2C.STM32F4_I2C @ sysbus 0x40005400
    EventInterrupt -> nvic@31
    ErrorInterrupt -> nvic@32

i2c2: I2C.STM32F4_I2C @ sysbus 0x40005800
    EventInterrupt -> nvic@33
    ErrorInterrupt -> nvic@34

i2c3: I2C.STM32F4_I2C @ sysbus 0x40005C00
    EventInterrupt -> nvic@72
    ErrorInterrupt -> nvic@73

i2c4: I2C.STM32F4_I2C @ sysbus 0x40008400
    EventInterrupt -> nvic@83
    ErrorInterrupt -> nvic@84

iwdg: Timers.STM32_IndependentWatchdog @ sysbus 0x40003000
    frequency: 32000

rcc: Miscellaneous.STM32F4_RCC @ sysbus 0x40021000
    rtcPeripheral: rtc

rng: Miscellaneous.STM32F4_RNG @ sysbus 0x50060800
    -> nvic@80

rtc: Timers.STM32F4_RTC @ sysbus 0x40002800
    AlarmIRQ -> exti@17

spi1: SPI.STM32SPI @ sysbus 0x40013000
    -> nvic@35

spi2: SPI.STM32SPI @ sysbus 0x40003800
    -> nvic@36

spi3: SPI.STM32SPI @ sysbus 0x40003C00
    -> nvic@51

syscfg: Miscellaneous.STM32_SYSCFG @ sysbus 0x40010000
    [0-15] -> exti@[0-15]

timer1: Timers.STM32_Timer @ sysbus <0x40012c00, +0x400>
    initialLimit: 0xffff
    frequency: 80000000

timer2: Timers.STM32_Timer @ sysbus <0x40000000, +0x400>
    initialLimit: 0xffffffff
    frequency: 40000000
    -> nvic@28

timer3: Timers.STM32_Timer @ sysbus <0x40000400, +0x400>
    initialLimit: 0xffff
    frequency: 40000000
    -> nvic@29

timer6: Timers.STM32_Timer @ sysbus <0x40001000, +0x400>
    initialLimit: 0xffff
    frequency: 40000000
    -> nvic@54

timer15: Timers.STM32_Timer @ sysbus <0x40014000, +0x400>
    initialLimit: 0xffff
    frequency: 40000000
    -> nvic@24

timer16: Timers.STM32_Timer @ sysbus <0x40014400, +0x400>
    initialLimit: 0xffff
    frequency: 40000000
    -> nvic@25

usart1: UART.STM32F7_USART @ sysbus 0x40013800
    frequency: 200000000
    -> nvic@37

usart2: UART.STM32F7_USART @ sysbus 0x40004400
    frequency: 200000000
    -> nvic@38

usart3: UART.STM32F7_USART @ sysbus 0x40004800
    frequency: 200000000
    -> nvic@39

uart4: UART.STM32F7_USART @ sysbus 0x40004c00
    frequency: 200000000
    -> nvic@52

sram: Memory.MappedMemory @ {
//         sysbus 0x0; // BOOT 11
        sysbus 0x20000000
    }
    size: 0x28000

flash0: Memory.MappedMemory @ {
        sysbus 0x0; // BOOT x0
        sysbus 0x8000000
    }
    size: 0x40000

flash1: Memory.MappedMemory @ sysbus 0x8040000
    size: 0xc0000
